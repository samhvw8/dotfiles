# =============================================================================
#                               Core ZSH Settings
# =============================================================================

# History Configuration
setopt SHARE_HISTORY INC_APPEND_HISTORY HIST_NO_STORE
setopt appendhistory beep nomatch

# XDG Base Directory Specification
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_STATE_HOME="${HOME}/.local/state"
export XDG_RUNTIME_DIR="${HOME}/.local/run"

# Create necessary directories
for dir in "$XDG_CONFIG_HOME" "$XDG_CACHE_HOME" "$XDG_DATA_HOME" "$XDG_STATE_HOME" "$XDG_RUNTIME_DIR"; do
    [[ ! -d "$dir" ]] && mkdir -p "$dir"
done

# ZSH-specific directories
export ZSH_DATA_DIR="${XDG_DATA_HOME}/zsh"
export ZSH_CACHE_DIR="${XDG_CACHE_HOME}/zsh"
export ZSH_COMPDUMP="${ZSH_CACHE_DIR}/zcompdump"

# Ensure ZSH directories exist
for dir in "$ZSH_DATA_DIR" "$ZSH_CACHE_DIR" "$ZSH_CACHE_DIR/completions"; do
    [[ ! -d "$dir" ]] && mkdir -p "$dir"
done

# =============================================================================
#                               ZI Plugin Manager
# =============================================================================

# Install ZI if not present
if [[ ! -f $HOME/.zi/bin/zi.zsh ]]; then
    print -P "%F{33}▓▒░ %F{160}Installing (%F{33}z-shell/zi%F{160})…%f"
    command mkdir -p "$HOME/.zi" && command chmod go-rwX "$HOME/.zi"
    command git clone -q --depth=1 --branch "main" https://github.com/z-shell/zi "$HOME/.zi/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zi/bin/zi.zsh"
autoload -Uz _zi
(( ${+_comps} )) && _comps[zi]=_zi

zi light-mode for z-shell/z-a-meta-plugins @annexes
zicompinit

# =============================================================================
#                               Prompt Configuration
# =============================================================================

export DIRENV_LOG_FORMAT=
setopt promptsubst

# Starship prompt installation
if [[ $(uname) == "Darwin" ]]; then
    zi lucid for \
        as"command" from"gh-r" \
        atinit'export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"' \
        atload'eval "$(starship init zsh)"' \
        bpick'*apple-darwin.tar.gz' \
        starship/starship
elif [[ $(uname -m) == "aarch64" ]]; then
    zi lucid for \
        as"command" from"gh-r" \
        atinit'export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"' \
        atload'eval "$(starship init zsh)"' \
        bpick'*aarch64-unknown-linux*' \
        starship/starship
else
    zi lucid for \
        as"command" from"gh-r" \
        atinit'export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"' \
        atload'eval "$(starship init zsh)"' \
        bpick'*unknown-linux-gnu*' \
        starship/starship
fi

# =============================================================================
#                               Tool Configuration
# =============================================================================

# Mise configuration
if [[ -x "$HOME/.local/bin/mise" ]]; then
    eval "$($HOME/.local/bin/mise activate zsh)"
    if [[ ! -f "$ZSH_CACHE_DIR/completions/_mise" ]]; then
        mise completion zsh > "$ZSH_CACHE_DIR/completions/_mise"
    fi
    zi ice as"completion"
    zi snippet "$ZSH_CACHE_DIR/completions/_mise"
fi

# =============================================================================
#                               Oh-My-Zsh Integration
# =============================================================================

# Load Oh-My-Zsh libraries
zi lucid for OMZL::history.zsh

# Load Oh-My-Zsh plugins with delay
zi wait lucid for \
    OMZL::clipboard.zsh \
    OMZL::compfix.zsh \
    OMZL::completion.zsh \
    OMZL::correction.zsh \
    OMZL::directories.zsh \
    OMZL::git.zsh \
    OMZL::grep.zsh \
    OMZL::spectrum.zsh \
    OMZP::git \
    OMZP::urltools \
    OMZP::extract \
    OMZP::encode64

# Directory navigation aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

# =============================================================================
#                               Additional Tools
# =============================================================================

# FZF configuration
if [[ -f "$HOME/.fzf.zsh" ]]; then
    zi ice wait"0" lucid
    zi snippet "$HOME/.fzf.zsh"
    zi light Aloxaf/fzf-tab
fi

# Zoxide configuration
zi ice wait"2" as"command" from"gh-r" lucid \
    mv"*zoxide* -> zoxide" \
    atclone"./zoxide init --cmd j zsh > init.zsh" \
    atpull"%atclone" src"init.zsh" nocompile'!'
zi light ajeetdsouza/zoxide

# Console tools
zi light-mode for z-shell/z-a-meta-plugins @console-tools

# Delta (better diff tool)
zi ice as"command" from"gh-r" mv"delta* -> delta" pick"delta/delta"
zi light dandavison/delta

# =============================================================================
#                               Editor Configuration
# =============================================================================

if command -v nvim &> /dev/null; then
    alias vim="nvim"
    export EDITOR='nvim'
    alias nvimo="nvim -u NORC --noplugin"
    alias vimo="/usr/bin/vim"
fi

# =============================================================================
#                               ZSH Enhancements
# =============================================================================

# Syntax highlighting and autosuggestions
zi wait lucid for \
    atinit"ZI[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    z-shell/fast-syntax-highlighting \
    blockf \
    zsh-users/zsh-completions \
    atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

[[ -d "$HOME/.dotbare" ]] && {
    zi ice wait lucid
    zi light "$HOME/.dotbare"
}

zi ice wait lucid
zi light "MichaelAquilina/zsh-you-should-use"

# =============================================================================
#                               Path Configuration
# =============================================================================

# Add directories to PATH
export PATH="$HOME/.local/bin:$PATH"
export PATH="$PATH:$HOME/bin"

# OS-specific configuration
if [[ $(uname) == "Darwin" ]]; then
    [[ -e "${HOME}/.iterm2_shell_integration.zsh" ]] && source "${HOME}/.iterm2_shell_integration.zsh"
    export HOMEBREW_NO_INSTALL_CLEANUP=1
    export PATH="/usr/local/sbin:$PATH"
else
    alias open=xdg-open
fi

# =============================================================================
#                               Environment Variables
# =============================================================================

# FZF configuration
export FZF_DEFAULT_OPTS='
--color=dark
--color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
--color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7
'

# Locale settings
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
